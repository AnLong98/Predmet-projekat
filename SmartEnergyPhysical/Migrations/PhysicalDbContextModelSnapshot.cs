// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartEnergy.Physical.Infrastructure;

namespace SmartEnergy.Physical.Migrations
{
    [DbContext(typeof(PhysicalDbContext))]
    partial class PhysicalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartEnergy.Physical.DomainModels.Device", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceCounter")
                        .HasColumnType("int");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("LocationID");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartEnergy.Physical.DomainModels.DeviceUsage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceID")
                        .HasColumnType("int");

                    b.Property<int?>("IncidentID")
                        .HasColumnType("int");

                    b.Property<int?>("SafetyDocumentID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkPlanID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkRequestID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID");

                    b.ToTable("DeviceUsages");
                });

            modelBuilder.Entity("SmartEnergy.Physical.DomainModels.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("MorningPriority")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int>("NightPriority")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int>("NoonPriority")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("SmartEnergy.Physical.DomainModels.Device", b =>
                {
                    b.HasOne("SmartEnergy.Physical.DomainModels.Location", "Location")
                        .WithMany("Devices")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("SmartEnergy.Physical.DomainModels.DeviceUsage", b =>
                {
                    b.HasOne("SmartEnergy.Physical.DomainModels.Device", "Device")
                        .WithMany("DeviceUsage")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartEnergy.Physical.DomainModels.Device", b =>
                {
                    b.Navigation("DeviceUsage");
                });

            modelBuilder.Entity("SmartEnergy.Physical.DomainModels.Location", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
